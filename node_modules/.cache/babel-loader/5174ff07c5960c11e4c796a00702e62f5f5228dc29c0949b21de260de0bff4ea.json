{"ast":null,"code":"var _jsxFileName = \"/Users/tchimbakate/Documents/mchimbakate.github.io/src/components/AvailableTimesCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./calendar.css\"; // optional custom styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableTimesCalendar = ({\n  businessId,\n  practitionerId,\n  appointmentType\n}) => {\n  _s();\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    if (!appointmentType) return;\n    const fetchTimes = async () => {\n      try {\n        const today = new Date();\n        const from = today.toISOString().split(\"T\")[0];\n        const toDate = new Date();\n        toDate.setDate(today.getDate() + 30); // fetch 30 days ahead\n        const to = toDate.toISOString().split(\"T\")[0];\n        const res = await axios.get(`http://localhost:4000/api/businesses/${businessId}/practitioners/${practitionerId}/appointment_types/${appointmentType.id}/available-times`, {\n          params: {\n            from,\n            to\n          }\n        });\n        setAvailableTimes(res.data.available_times);\n      } catch (err) {\n        console.error(\"Error fetching available times:\", err);\n      }\n    };\n    fetchTimes();\n  }, [businessId, practitionerId, appointmentType]);\n\n  // Filter available times for selected date\n  const timesForSelectedDate = availableTimes.filter(t => {\n    const tDate = new Date(t.appointment_start);\n    return tDate.toDateString() === selectedDate.toDateString();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Available Times for \", appointmentType.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: setSelectedDate,\n      value: selectedDate,\n      minDate: new Date()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), timesForSelectedDate.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-3\",\n      children: \"No available times on this day.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Available slots:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex flex-wrap\",\n        children: timesForSelectedDate.map((t, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary m-1\",\n          onClick: () => alert(`You selected ${new Date(t.appointment_start).toLocaleString()}`),\n          children: new Date(t.appointment_start).toLocaleTimeString([], {\n            hour: \"2-digit\",\n            minute: \"2-digit\"\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableTimesCalendar, \"2XaDRZaWA2/l3XIG6TBEM00l0tU=\");\n_c = AvailableTimesCalendar;\nexport default AvailableTimesCalendar;\nvar _c;\n$RefreshReg$(_c, \"AvailableTimesCalendar\");","map":{"version":3,"names":["React","useEffect","useState","axios","Calendar","jsxDEV","_jsxDEV","AvailableTimesCalendar","businessId","practitionerId","appointmentType","_s","availableTimes","setAvailableTimes","selectedDate","setSelectedDate","Date","fetchTimes","today","from","toISOString","split","toDate","setDate","getDate","to","res","get","id","params","data","available_times","err","console","error","timesForSelectedDate","filter","t","tDate","appointment_start","toDateString","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onChange","value","minDate","length","map","index","onClick","alert","toLocaleString","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["/Users/tchimbakate/Documents/mchimbakate.github.io/src/components/AvailableTimesCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./calendar.css\"; // optional custom styling\n\nconst AvailableTimesCalendar = ({\n  businessId,\n  practitionerId,\n  appointmentType,\n}) => {\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    if (!appointmentType) return;\n\n    const fetchTimes = async () => {\n      try {\n        const today = new Date();\n        const from = today.toISOString().split(\"T\")[0];\n        const toDate = new Date();\n        toDate.setDate(today.getDate() + 30); // fetch 30 days ahead\n        const to = toDate.toISOString().split(\"T\")[0];\n\n        const res = await axios.get(\n          `http://localhost:4000/api/businesses/${businessId}/practitioners/${practitionerId}/appointment_types/${appointmentType.id}/available-times`,\n          { params: { from, to } }\n        );\n\n        setAvailableTimes(res.data.available_times);\n      } catch (err) {\n        console.error(\"Error fetching available times:\", err);\n      }\n    };\n\n    fetchTimes();\n  }, [businessId, practitionerId, appointmentType]);\n\n  // Filter available times for selected date\n  const timesForSelectedDate = availableTimes.filter((t) => {\n    const tDate = new Date(t.appointment_start);\n    return tDate.toDateString() === selectedDate.toDateString();\n  });\n\n  return (\n    <div className=\"mt-4\">\n      <h4>Available Times for {appointmentType.name}</h4>\n\n      <Calendar\n        onChange={setSelectedDate}\n        value={selectedDate}\n        minDate={new Date()}\n      />\n\n      {timesForSelectedDate.length === 0 ? (\n        <p className=\"mt-3\">No available times on this day.</p>\n      ) : (\n        <div className=\"mt-3\">\n          <h5>Available slots:</h5>\n          <div className=\"d-flex flex-wrap\">\n            {timesForSelectedDate.map((t, index) => (\n              <button\n                key={index}\n                className=\"btn btn-outline-primary m-1\"\n                onClick={() =>\n                  alert(\n                    `You selected ${new Date(\n                      t.appointment_start\n                    ).toLocaleString()}`\n                  )\n                }\n              >\n                {new Date(t.appointment_start).toLocaleTimeString([], {\n                  hour: \"2-digit\",\n                  minute: \"2-digit\",\n                })}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AvailableTimesCalendar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}