{"ast":null,"code":"var _jsxFileName = \"/Users/tchimbakate/Documents/mchimbakate.github.io/src/components/AvailableTimesCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableTimesCalendar = ({\n  businessId,\n  practitionerId,\n  appointmentType\n}) => {\n  _s();\n  const [times, setTimes] = useState([]);\n  useEffect(() => {\n    const fetchTimes = async () => {\n      if (!appointmentType) return;\n      const today = new Date().toISOString().split(\"T\")[0]; // YYYY-MM-DD\n      const nextWeek = new Date();\n      nextWeek.setDate(nextWeek.getDate() + 7);\n      const to = nextWeek.toISOString().split(\"T\")[0];\n      console.log(\"Fetching times for type:\", appointmentType);\n      try {\n        const res = await axios.get(`http://localhost:4000/api/businesses/${businessId}/practitioners/${practitionerId}/appointment_types/${appointmentType.id}/available-times`, {\n          params: {\n            from: today,\n            to\n          }\n        });\n        setTimes(res.data.available_times);\n      } catch (err) {\n        console.error(\"Error fetching available times:\", err);\n      }\n    };\n    fetchTimes();\n  }, [businessId, practitionerId, appointmentType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Available Times for \", appointmentType.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), times.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No available times found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: times.map((t, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item\",\n        children: new Date(t.appointment_start).toLocaleString()\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableTimesCalendar, \"81bowZj0s+OEa3RiisSpRGrXe+U=\");\n_c = AvailableTimesCalendar;\nexport default AvailableTimesCalendar;\nvar _c;\n$RefreshReg$(_c, \"AvailableTimesCalendar\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AvailableTimesCalendar","businessId","practitionerId","appointmentType","_s","times","setTimes","fetchTimes","today","Date","toISOString","split","nextWeek","setDate","getDate","to","console","log","res","get","id","params","from","data","available_times","err","error","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","length","map","t","index","appointment_start","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/tchimbakate/Documents/mchimbakate.github.io/src/components/AvailableTimesCalendar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst AvailableTimesCalendar = ({\n  businessId,\n  practitionerId,\n  appointmentType,\n}) => {\n  const [times, setTimes] = useState([]);\n\n  useEffect(() => {\n    const fetchTimes = async () => {\n      if (!appointmentType) return;\n\n      const today = new Date().toISOString().split(\"T\")[0]; // YYYY-MM-DD\n      const nextWeek = new Date();\n      nextWeek.setDate(nextWeek.getDate() + 7);\n      const to = nextWeek.toISOString().split(\"T\")[0];\n\n      console.log(\"Fetching times for type:\", appointmentType);\n\n      try {\n        const res = await axios.get(\n          `http://localhost:4000/api/businesses/${businessId}/practitioners/${practitionerId}/appointment_types/${appointmentType.id}/available-times`,\n          { params: { from: today, to } }\n        );\n        setTimes(res.data.available_times);\n      } catch (err) {\n        console.error(\"Error fetching available times:\", err);\n      }\n    };\n\n    fetchTimes();\n  }, [businessId, practitionerId, appointmentType]);\n\n  return (\n    <div className=\"mt-4\">\n      <h4>Available Times for {appointmentType.name}</h4>\n      {times.length === 0 ? (\n        <p>No available times found.</p>\n      ) : (\n        <ul className=\"list-group\">\n          {times.map((t, index) => (\n            <li key={index} className=\"list-group-item\">\n              {new Date(t.appointment_start).toLocaleString()}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default AvailableTimesCalendar;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,sBAAsB,GAAGA,CAAC;EAC9BC,UAAU;EACVC,cAAc;EACdC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACJ,eAAe,EAAE;MAEtB,MAAMK,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACtD,MAAMC,QAAQ,GAAG,IAAIH,IAAI,CAAC,CAAC;MAC3BG,QAAQ,CAACC,OAAO,CAACD,QAAQ,CAACE,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;MACxC,MAAMC,EAAE,GAAGH,QAAQ,CAACF,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAE/CK,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEd,eAAe,CAAC;MAExD,IAAI;QACF,MAAMe,GAAG,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CACzB,wCAAwClB,UAAU,kBAAkBC,cAAc,sBAAsBC,eAAe,CAACiB,EAAE,kBAAkB,EAC5I;UAAEC,MAAM,EAAE;YAAEC,IAAI,EAAEd,KAAK;YAAEO;UAAG;QAAE,CAChC,CAAC;QACDT,QAAQ,CAACY,GAAG,CAACK,IAAI,CAACC,eAAe,CAAC;MACpC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZT,OAAO,CAACU,KAAK,CAAC,iCAAiC,EAAED,GAAG,CAAC;MACvD;IACF,CAAC;IAEDlB,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,UAAU,EAAEC,cAAc,EAAEC,eAAe,CAAC,CAAC;EAEjD,oBACEJ,OAAA;IAAK4B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB7B,OAAA;MAAA6B,QAAA,GAAI,sBAAoB,EAACzB,eAAe,CAAC0B,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClD5B,KAAK,CAAC6B,MAAM,KAAK,CAAC,gBACjBnC,OAAA;MAAA6B,QAAA,EAAG;IAAyB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEhClC,OAAA;MAAI4B,SAAS,EAAC,YAAY;MAAAC,QAAA,EACvBvB,KAAK,CAAC8B,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBAClBtC,OAAA;QAAgB4B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EACxC,IAAInB,IAAI,CAAC2B,CAAC,CAACE,iBAAiB,CAAC,CAACC,cAAc,CAAC;MAAC,GADxCF,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAhDIJ,sBAAsB;AAAAwC,EAAA,GAAtBxC,sBAAsB;AAkD5B,eAAeA,sBAAsB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}