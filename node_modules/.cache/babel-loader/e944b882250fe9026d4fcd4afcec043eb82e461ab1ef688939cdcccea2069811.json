{"ast":null,"code":"var _jsxFileName = \"/Users/tchimbakate/Documents/mchimbakate.github.io/src/components/AppointmentTypeDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentTypeDropdown = ({\n  practitionerId,\n  onSelect\n}) => {\n  _s();\n  const [types, setTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState(\"\");\n  useEffect(() => {\n    const fetchTypes = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/api/practitioners/${practitionerId}/appointment-types`);\n        setTypes(res.data.appointment_types);\n      } catch (err) {\n        console.error(\"Error fetching appointment types:\", err);\n      }\n    };\n    fetchTypes();\n  }, [practitionerId]);\n  const handleChange = e => {\n    setSelectedType(e.target.value);\n    onSelect && onSelect(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"appointmentType\",\n      className: \"form-label\",\n      children: \"Select Appointment Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"appointmentType\",\n      className: \"form-select\",\n      value: selectedType,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Choose a type --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type.id,\n        children: [type.name, \" (\", type.duration_in_minutes, \" min)\"]\n      }, type.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentTypeDropdown, \"Nt6IogWuX19wmMJHunw8qc3QVD4=\");\n_c = AppointmentTypeDropdown;\nexport default AppointmentTypeDropdown;\nvar _c;\n$RefreshReg$(_c, \"AppointmentTypeDropdown\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AppointmentTypeDropdown","practitionerId","onSelect","_s","types","setTypes","selectedType","setSelectedType","fetchTypes","res","get","data","appointment_types","err","console","error","handleChange","e","target","value","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","map","type","name","duration_in_minutes","_c","$RefreshReg$"],"sources":["/Users/tchimbakate/Documents/mchimbakate.github.io/src/components/AppointmentTypeDropdown.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst AppointmentTypeDropdown = ({ practitionerId, onSelect }) => {\n  const [types, setTypes] = useState([]);\n  const [selectedType, setSelectedType] = useState(\"\");\n\n  useEffect(() => {\n    const fetchTypes = async () => {\n      try {\n        const res = await axios.get(\n          `http://localhost:4000/api/practitioners/${practitionerId}/appointment-types`\n        );\n        setTypes(res.data.appointment_types);\n      } catch (err) {\n        console.error(\"Error fetching appointment types:\", err);\n      }\n    };\n\n    fetchTypes();\n  }, [practitionerId]);\n\n  const handleChange = (e) => {\n    setSelectedType(e.target.value);\n    onSelect && onSelect(e.target.value);\n  };\n\n  return (\n    <div className=\"mb-3\">\n      <label htmlFor=\"appointmentType\" className=\"form-label\">\n        Select Appointment Type\n      </label>\n      <select\n        id=\"appointmentType\"\n        className=\"form-select\"\n        value={selectedType}\n        onChange={handleChange}\n      >\n        <option value=\"\">-- Choose a type --</option>\n        {types.map((type) => (\n          <option key={type.id} value={type.id}>\n            {type.name} ({type.duration_in_minutes} min)\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default AppointmentTypeDropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,uBAAuB,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMZ,KAAK,CAACa,GAAG,CACzB,2CAA2CT,cAAc,oBAC3D,CAAC;QACDI,QAAQ,CAACI,GAAG,CAACE,IAAI,CAACC,iBAAiB,CAAC;MACtC,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEF,GAAG,CAAC;MACzD;IACF,CAAC;IAEDL,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC;EAEpB,MAAMe,YAAY,GAAIC,CAAC,IAAK;IAC1BV,eAAe,CAACU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/BjB,QAAQ,IAAIA,QAAQ,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBtB,OAAA;MAAOuB,OAAO,EAAC,iBAAiB;MAACF,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAExD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACR3B,OAAA;MACE4B,EAAE,EAAC,iBAAiB;MACpBP,SAAS,EAAC,aAAa;MACvBD,KAAK,EAAEb,YAAa;MACpBsB,QAAQ,EAAEZ,YAAa;MAAAK,QAAA,gBAEvBtB,OAAA;QAAQoB,KAAK,EAAC,EAAE;QAAAE,QAAA,EAAC;MAAmB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAC5CtB,KAAK,CAACyB,GAAG,CAAEC,IAAI,iBACd/B,OAAA;QAAsBoB,KAAK,EAAEW,IAAI,CAACH,EAAG;QAAAN,QAAA,GAClCS,IAAI,CAACC,IAAI,EAAC,IAAE,EAACD,IAAI,CAACE,mBAAmB,EAAC,OACzC;MAAA,GAFaF,IAAI,CAACH,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5CIH,uBAAuB;AAAAiC,EAAA,GAAvBjC,uBAAuB;AA8C7B,eAAeA,uBAAuB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}